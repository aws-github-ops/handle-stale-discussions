"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasInstructionsText = exports.hasReplies = exports.exceedsDaysUntilStale = exports.containsKeyword = exports.hasReaction = exports.containsNegativeReaction = exports.containsPositiveReaction = exports.isNegativeReaction = exports.isPositiveReaction = exports.daysSinceComment = void 0;
const graphql_1 = require("./generated/graphql");
function daysSinceComment(comment) {
    const currentDate = new Date();
    const commentDate = new Date(comment.node?.updatedAt.toString());
    const diffInMs = currentDate.getTime() - commentDate.getTime();
    const diffInDays = diffInMs / (1000 * 3600 * 24);
    return diffInDays;
}
exports.daysSinceComment = daysSinceComment;
function isPositiveReaction(content) {
    return ((content === graphql_1.ReactionContent.ThumbsUp) || (content === graphql_1.ReactionContent.Heart) || (content === graphql_1.ReactionContent.Hooray) || (content === graphql_1.ReactionContent.Laugh) || (content === graphql_1.ReactionContent.Rocket));
}
exports.isPositiveReaction = isPositiveReaction;
function isNegativeReaction(content) {
    return ((content === graphql_1.ReactionContent.ThumbsDown) || (content === graphql_1.ReactionContent.Confused));
}
exports.isNegativeReaction = isNegativeReaction;
function containsPositiveReaction(comment) {
    return comment.node?.reactions.nodes?.some(reaction => {
        return isPositiveReaction(reaction?.content);
    });
}
exports.containsPositiveReaction = containsPositiveReaction;
function containsNegativeReaction(comment) {
    return comment.node?.reactions.nodes?.some(reaction => {
        return isNegativeReaction(reaction?.content);
    });
}
exports.containsNegativeReaction = containsNegativeReaction;
function hasReaction(comment) {
    return comment?.node?.reactions.nodes?.length !== 0;
}
exports.hasReaction = hasReaction;
function containsKeyword(comment, text) {
    return comment?.node?.bodyText?.indexOf(text) >= 0;
}
exports.containsKeyword = containsKeyword;
function exceedsDaysUntilStale(comment, staleTimeDays) {
    return (daysSinceComment(comment) >= staleTimeDays);
}
exports.exceedsDaysUntilStale = exceedsDaysUntilStale;
function hasReplies(comment) {
    return comment.node?.replies.edges?.some(reply => {
        return (reply?.node?.bodyText.length !== 0);
    });
}
exports.hasReplies = hasReplies;
function hasInstructionsText(comments, INSTRUCTIONS_TEXT) {
    return comments.edges?.some(comment => {
        return comment?.node?.bodyText?.indexOf(INSTRUCTIONS_TEXT) >= 0;
    });
}
exports.hasInstructionsText = hasInstructionsText;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGlEQUEyRztBQUUzRyxTQUFnQixnQkFBZ0IsQ0FBQyxPQUE4QjtJQUM3RCxNQUFNLFdBQVcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQy9CLE1BQU0sV0FBVyxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDakUsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMvRCxNQUFNLFVBQVUsR0FBRyxRQUFRLEdBQUcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ2pELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUM7QUFORCw0Q0FNQztBQUVELFNBQWdCLGtCQUFrQixDQUFDLE9BQWdDO0lBQ2pFLE9BQU8sQ0FBQyxDQUFDLE9BQU8sS0FBSyx5QkFBZSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLHlCQUFlLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLEtBQUsseUJBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyx5QkFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLHlCQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNoTixDQUFDO0FBRkQsZ0RBRUM7QUFFRCxTQUFnQixrQkFBa0IsQ0FBQyxPQUFnQztJQUNqRSxPQUFPLENBQUMsQ0FBQyxPQUFPLEtBQUsseUJBQWUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyx5QkFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDOUYsQ0FBQztBQUZELGdEQUVDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsT0FBOEI7SUFDckUsT0FBTyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3BELE9BQU8sa0JBQWtCLENBQUMsUUFBUSxFQUFFLE9BQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBRSxDQUFDO0FBQ04sQ0FBQztBQUpELDREQUlDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsT0FBOEI7SUFDckUsT0FBTyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3BELE9BQU8sa0JBQWtCLENBQUMsUUFBUSxFQUFFLE9BQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBRSxDQUFDO0FBQ04sQ0FBQztBQUpELDREQUlDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLE9BQThCO0lBQ3hELE9BQU8sT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sS0FBSyxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUZELGtDQUVDO0FBRUQsU0FBZ0IsZUFBZSxDQUFDLE9BQThCLEVBQUUsSUFBWTtJQUMxRSxPQUFPLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUZELDBDQUVDO0FBRUQsU0FBZ0IscUJBQXFCLENBQUMsT0FBOEIsRUFBRSxhQUFxQjtJQUN6RixPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLElBQUksYUFBYSxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUZELHNEQUVDO0FBRUQsU0FBZ0IsVUFBVSxDQUFDLE9BQThCO0lBQ3ZELE9BQU8sT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUMvQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzlDLENBQUMsQ0FBRSxDQUFDO0FBQ04sQ0FBQztBQUpELGdDQUlDO0FBR0QsU0FBZ0IsbUJBQW1CLENBQUMsUUFBcUMsRUFBRSxpQkFBeUI7SUFDaEcsT0FBTyxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNsQyxPQUFPLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBRSxJQUFJLENBQUMsQ0FBQztJQUNyRSxDQUFDLENBQUUsQ0FBQztBQUNSLENBQUM7QUFKRCxrREFJQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG9jdG9raXQgZnJvbSBcIkBvY3Rva2l0L2dyYXBocWwtc2NoZW1hXCI7XG5pbXBvcnQgeyAgRGlzY3Vzc2lvbkNvbW1lbnRDb25uZWN0aW9uLCBEaXNjdXNzaW9uQ29tbWVudEVkZ2UsIFJlYWN0aW9uQ29udGVudCB9IGZyb20gXCIuL2dlbmVyYXRlZC9ncmFwaHFsXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBkYXlzU2luY2VDb21tZW50KGNvbW1lbnQ6IERpc2N1c3Npb25Db21tZW50RWRnZSk6IG51bWJlciB7XG4gIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcbiAgY29uc3QgY29tbWVudERhdGUgPSBuZXcgRGF0ZShjb21tZW50Lm5vZGU/LnVwZGF0ZWRBdC50b1N0cmluZygpKTtcbiAgY29uc3QgZGlmZkluTXMgPSBjdXJyZW50RGF0ZS5nZXRUaW1lKCkgLSBjb21tZW50RGF0ZS5nZXRUaW1lKCk7XG4gIGNvbnN0IGRpZmZJbkRheXMgPSBkaWZmSW5NcyAvICgxMDAwICogMzYwMCAqIDI0KTtcbiAgcmV0dXJuIGRpZmZJbkRheXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Bvc2l0aXZlUmVhY3Rpb24oY29udGVudDogb2N0b2tpdC5SZWFjdGlvbkNvbnRlbnQpOiBib29sZWFuIHtcbiAgcmV0dXJuICgoY29udGVudCA9PT0gUmVhY3Rpb25Db250ZW50LlRodW1ic1VwKSB8fCAoY29udGVudCA9PT0gUmVhY3Rpb25Db250ZW50LkhlYXJ0KSB8fCAoY29udGVudCA9PT0gUmVhY3Rpb25Db250ZW50Lkhvb3JheSkgfHwgKGNvbnRlbnQgPT09IFJlYWN0aW9uQ29udGVudC5MYXVnaCkgfHwgKGNvbnRlbnQgPT09IFJlYWN0aW9uQ29udGVudC5Sb2NrZXQpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTmVnYXRpdmVSZWFjdGlvbihjb250ZW50OiBvY3Rva2l0LlJlYWN0aW9uQ29udGVudCk6IGJvb2xlYW4ge1xuICByZXR1cm4gKChjb250ZW50ID09PSBSZWFjdGlvbkNvbnRlbnQuVGh1bWJzRG93bikgfHwgKGNvbnRlbnQgPT09IFJlYWN0aW9uQ29udGVudC5Db25mdXNlZCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udGFpbnNQb3NpdGl2ZVJlYWN0aW9uKGNvbW1lbnQ6IERpc2N1c3Npb25Db21tZW50RWRnZSk6IGJvb2xlYW4ge1xuICByZXR1cm4gY29tbWVudC5ub2RlPy5yZWFjdGlvbnMubm9kZXM/LnNvbWUocmVhY3Rpb24gPT4ge1xuICAgIHJldHVybiBpc1Bvc2l0aXZlUmVhY3Rpb24ocmVhY3Rpb24/LmNvbnRlbnQhKTtcbiAgfSkhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udGFpbnNOZWdhdGl2ZVJlYWN0aW9uKGNvbW1lbnQ6IERpc2N1c3Npb25Db21tZW50RWRnZSk6IGJvb2xlYW4ge1xuICByZXR1cm4gY29tbWVudC5ub2RlPy5yZWFjdGlvbnMubm9kZXM/LnNvbWUocmVhY3Rpb24gPT4ge1xuICAgIHJldHVybiBpc05lZ2F0aXZlUmVhY3Rpb24ocmVhY3Rpb24/LmNvbnRlbnQhKTtcbiAgfSkhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFzUmVhY3Rpb24oY29tbWVudDogRGlzY3Vzc2lvbkNvbW1lbnRFZGdlKTogYm9vbGVhbiB7XG4gIHJldHVybiBjb21tZW50Py5ub2RlPy5yZWFjdGlvbnMubm9kZXM/Lmxlbmd0aCAhPT0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnRhaW5zS2V5d29yZChjb21tZW50OiBEaXNjdXNzaW9uQ29tbWVudEVkZ2UsIHRleHQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gY29tbWVudD8ubm9kZT8uYm9keVRleHQ/LmluZGV4T2YodGV4dCkhID49IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGNlZWRzRGF5c1VudGlsU3RhbGUoY29tbWVudDogRGlzY3Vzc2lvbkNvbW1lbnRFZGdlLCBzdGFsZVRpbWVEYXlzOiBudW1iZXIpOiBib29sZWFuIHtcbiAgcmV0dXJuIChkYXlzU2luY2VDb21tZW50KGNvbW1lbnQpID49IHN0YWxlVGltZURheXMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFzUmVwbGllcyhjb21tZW50OiBEaXNjdXNzaW9uQ29tbWVudEVkZ2UpOiBib29sZWFue1xuICByZXR1cm4gY29tbWVudC5ub2RlPy5yZXBsaWVzLmVkZ2VzPy5zb21lKHJlcGx5ID0+IHtcbiAgICByZXR1cm4gKHJlcGx5Py5ub2RlPy5ib2R5VGV4dC5sZW5ndGggIT09IDApO1xuICB9KSE7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0luc3RydWN0aW9uc1RleHQoY29tbWVudHM6IERpc2N1c3Npb25Db21tZW50Q29ubmVjdGlvbiwgSU5TVFJVQ1RJT05TX1RFWFQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBjb21tZW50cy5lZGdlcz8uc29tZShjb21tZW50ID0+IHtcbiAgICAgICAgcmV0dXJuIGNvbW1lbnQ/Lm5vZGU/LmJvZHlUZXh0Py5pbmRleE9mKElOU1RSVUNUSU9OU19URVhUKSEgPj0gMDtcbiAgICB9KSE7XG59XG4iXX0=