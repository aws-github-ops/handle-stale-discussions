"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasInstructionsReply = exports.hasReply = exports.exceedsDaysUntilStale = exports.containsText = exports.hasReaction = exports.containsNegativeReaction = exports.containsPositiveReaction = exports.isNegativeReaction = exports.isPositiveReaction = exports.daysSinceComment = void 0;
const graphql_1 = require("./generated/graphql");
function daysSinceComment(comment) {
    const currentDate = new Date();
    const commentDate = new Date(comment.node?.updatedAt.toString());
    const diffInMs = currentDate.getTime() - commentDate.getTime();
    const diffInDays = diffInMs / (1000 * 3600 * 24);
    return diffInDays;
}
exports.daysSinceComment = daysSinceComment;
function isPositiveReaction(content) {
    return ((content === graphql_1.ReactionContent.ThumbsUp) || (content === graphql_1.ReactionContent.Heart) || (content === graphql_1.ReactionContent.Hooray) || (content === graphql_1.ReactionContent.Laugh) || (content === graphql_1.ReactionContent.Rocket));
}
exports.isPositiveReaction = isPositiveReaction;
function isNegativeReaction(content) {
    return ((content === graphql_1.ReactionContent.ThumbsDown) || (content === graphql_1.ReactionContent.Confused));
}
exports.isNegativeReaction = isNegativeReaction;
function containsPositiveReaction(comment) {
    return comment.node?.reactions.nodes?.some(reaction => {
        return isPositiveReaction(reaction?.content);
    });
}
exports.containsPositiveReaction = containsPositiveReaction;
function containsNegativeReaction(comment) {
    return comment.node?.reactions.nodes?.some(reaction => {
        return isNegativeReaction(reaction?.content);
    });
}
exports.containsNegativeReaction = containsNegativeReaction;
function hasReaction(comment) {
    return comment?.node?.reactions.nodes?.length !== 0;
}
exports.hasReaction = hasReaction;
function containsText(comment, text) {
    return comment?.node?.bodyText?.indexOf(text) >= 0;
}
exports.containsText = containsText;
function exceedsDaysUntilStale(comment, staleTimeDays) {
    return (daysSinceComment(comment) >= staleTimeDays);
}
exports.exceedsDaysUntilStale = exceedsDaysUntilStale;
// TODO: Implement this function
function hasReply(comment) {
    return ((comment.node?.replies.totalCount > 0));
}
exports.hasReply = hasReply;
function hasInstructionsReply(comment, discussion, INSTRUCTIONS_TEXT) {
    return (comment.node?.bodyText.indexOf(INSTRUCTIONS_TEXT)) >= 0;
}
exports.hasInstructionsReply = hasInstructionsReply;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLGlEQUFnRztBQUVoRyxTQUFnQixnQkFBZ0IsQ0FBQyxPQUE4QjtJQUM3RCxNQUFNLFdBQVcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQy9CLE1BQU0sV0FBVyxHQUFHLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDakUsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMvRCxNQUFNLFVBQVUsR0FBRyxRQUFRLEdBQUcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ2pELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUM7QUFORCw0Q0FNQztBQUVELFNBQWdCLGtCQUFrQixDQUFDLE9BQWdDO0lBQ2pFLE9BQU8sQ0FBQyxDQUFDLE9BQU8sS0FBSyx5QkFBZSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLHlCQUFlLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLEtBQUsseUJBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyx5QkFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLHlCQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNoTixDQUFDO0FBRkQsZ0RBRUM7QUFFRCxTQUFnQixrQkFBa0IsQ0FBQyxPQUFnQztJQUNqRSxPQUFPLENBQUMsQ0FBQyxPQUFPLEtBQUsseUJBQWUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyx5QkFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDOUYsQ0FBQztBQUZELGdEQUVDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsT0FBOEI7SUFDckUsT0FBTyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3BELE9BQU8sa0JBQWtCLENBQUMsUUFBUSxFQUFFLE9BQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBRSxDQUFDO0FBQ04sQ0FBQztBQUpELDREQUlDO0FBRUQsU0FBZ0Isd0JBQXdCLENBQUMsT0FBOEI7SUFDckUsT0FBTyxPQUFPLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ3BELE9BQU8sa0JBQWtCLENBQUMsUUFBUSxFQUFFLE9BQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUMsQ0FBRSxDQUFDO0FBQ04sQ0FBQztBQUpELDREQUlDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLE9BQThCO0lBQ3hELE9BQU8sT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sS0FBSyxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUZELGtDQUVDO0FBRUQsU0FBZ0IsWUFBWSxDQUFDLE9BQThCLEVBQUUsSUFBWTtJQUN2RSxPQUFPLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUUsSUFBSSxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUZELG9DQUVDO0FBRUQsU0FBZ0IscUJBQXFCLENBQUMsT0FBOEIsRUFBRSxhQUFxQjtJQUN6RixPQUFPLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLElBQUksYUFBYSxDQUFDLENBQUM7QUFDdEQsQ0FBQztBQUZELHNEQUVDO0FBRUQsZ0NBQWdDO0FBQ2hDLFNBQWdCLFFBQVEsQ0FBQyxPQUE4QjtJQUNyRCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxVQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxDQUFDO0FBRkQsNEJBRUM7QUFFRCxTQUFnQixvQkFBb0IsQ0FBQyxPQUE4QixFQUFFLFVBQWtDLEVBQUUsaUJBQXlCO0lBQ2hJLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBRSxJQUFJLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBRkQsb0RBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBvY3Rva2l0IGZyb20gXCJAb2N0b2tpdC9ncmFwaHFsLXNjaGVtYVwiO1xuaW1wb3J0ICogYXMgY29yZSBmcm9tIFwiQGFjdGlvbnMvY29yZVwiO1xuaW1wb3J0IHsgRGlzY3Vzc2lvbkNvbW1lbnQsIERpc2N1c3Npb25Db21tZW50RWRnZSwgUmVhY3Rpb25Db250ZW50IH0gZnJvbSBcIi4vZ2VuZXJhdGVkL2dyYXBocWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGRheXNTaW5jZUNvbW1lbnQoY29tbWVudDogRGlzY3Vzc2lvbkNvbW1lbnRFZGdlKTogbnVtYmVyIHtcbiAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpO1xuICBjb25zdCBjb21tZW50RGF0ZSA9IG5ldyBEYXRlKGNvbW1lbnQubm9kZT8udXBkYXRlZEF0LnRvU3RyaW5nKCkpO1xuICBjb25zdCBkaWZmSW5NcyA9IGN1cnJlbnREYXRlLmdldFRpbWUoKSAtIGNvbW1lbnREYXRlLmdldFRpbWUoKTtcbiAgY29uc3QgZGlmZkluRGF5cyA9IGRpZmZJbk1zIC8gKDEwMDAgKiAzNjAwICogMjQpO1xuICByZXR1cm4gZGlmZkluRGF5cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUG9zaXRpdmVSZWFjdGlvbihjb250ZW50OiBvY3Rva2l0LlJlYWN0aW9uQ29udGVudCk6IGJvb2xlYW4ge1xuICByZXR1cm4gKChjb250ZW50ID09PSBSZWFjdGlvbkNvbnRlbnQuVGh1bWJzVXApIHx8IChjb250ZW50ID09PSBSZWFjdGlvbkNvbnRlbnQuSGVhcnQpIHx8IChjb250ZW50ID09PSBSZWFjdGlvbkNvbnRlbnQuSG9vcmF5KSB8fCAoY29udGVudCA9PT0gUmVhY3Rpb25Db250ZW50LkxhdWdoKSB8fCAoY29udGVudCA9PT0gUmVhY3Rpb25Db250ZW50LlJvY2tldCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOZWdhdGl2ZVJlYWN0aW9uKGNvbnRlbnQ6IG9jdG9raXQuUmVhY3Rpb25Db250ZW50KTogYm9vbGVhbiB7XG4gIHJldHVybiAoKGNvbnRlbnQgPT09IFJlYWN0aW9uQ29udGVudC5UaHVtYnNEb3duKSB8fCAoY29udGVudCA9PT0gUmVhY3Rpb25Db250ZW50LkNvbmZ1c2VkKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250YWluc1Bvc2l0aXZlUmVhY3Rpb24oY29tbWVudDogRGlzY3Vzc2lvbkNvbW1lbnRFZGdlKTogYm9vbGVhbiB7XG4gIHJldHVybiBjb21tZW50Lm5vZGU/LnJlYWN0aW9ucy5ub2Rlcz8uc29tZShyZWFjdGlvbiA9PiB7XG4gICAgcmV0dXJuIGlzUG9zaXRpdmVSZWFjdGlvbihyZWFjdGlvbj8uY29udGVudCEpO1xuICB9KSE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250YWluc05lZ2F0aXZlUmVhY3Rpb24oY29tbWVudDogRGlzY3Vzc2lvbkNvbW1lbnRFZGdlKTogYm9vbGVhbiB7XG4gIHJldHVybiBjb21tZW50Lm5vZGU/LnJlYWN0aW9ucy5ub2Rlcz8uc29tZShyZWFjdGlvbiA9PiB7XG4gICAgcmV0dXJuIGlzTmVnYXRpdmVSZWFjdGlvbihyZWFjdGlvbj8uY29udGVudCEpO1xuICB9KSE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNSZWFjdGlvbihjb21tZW50OiBEaXNjdXNzaW9uQ29tbWVudEVkZ2UpOiBib29sZWFuIHtcbiAgcmV0dXJuIGNvbW1lbnQ/Lm5vZGU/LnJlYWN0aW9ucy5ub2Rlcz8ubGVuZ3RoICE9PSAwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udGFpbnNUZXh0KGNvbW1lbnQ6IERpc2N1c3Npb25Db21tZW50RWRnZSwgdGV4dDogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiBjb21tZW50Py5ub2RlPy5ib2R5VGV4dD8uaW5kZXhPZih0ZXh0KSEgPj0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4Y2VlZHNEYXlzVW50aWxTdGFsZShjb21tZW50OiBEaXNjdXNzaW9uQ29tbWVudEVkZ2UsIHN0YWxlVGltZURheXM6IG51bWJlcik6IGJvb2xlYW4ge1xuICByZXR1cm4gKGRheXNTaW5jZUNvbW1lbnQoY29tbWVudCkgPj0gc3RhbGVUaW1lRGF5cyk7XG59XG5cbi8vIFRPRE86IEltcGxlbWVudCB0aGlzIGZ1bmN0aW9uXG5leHBvcnQgZnVuY3Rpb24gaGFzUmVwbHkoY29tbWVudDogRGlzY3Vzc2lvbkNvbW1lbnRFZGdlKTogYm9vbGVhbiB7XG4gIHJldHVybiAoKGNvbW1lbnQubm9kZT8ucmVwbGllcy50b3RhbENvdW50ISA+IDApKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhc0luc3RydWN0aW9uc1JlcGx5KGNvbW1lbnQ6IERpc2N1c3Npb25Db21tZW50RWRnZSwgZGlzY3Vzc2lvbjogb2N0b2tpdC5EaXNjdXNzaW9uRWRnZSwgSU5TVFJVQ1RJT05TX1RFWFQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gKGNvbW1lbnQubm9kZT8uYm9keVRleHQuaW5kZXhPZihJTlNUUlVDVElPTlNfVEVYVCkpISA+PSAwO1xufVxuIl19